#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const program = require('commander')
const { spawn } = require('child_process')
const chalk = require('chalk')

const { printPkgVersion, getPkgVersion, } = require('../utils')

const create = require('../packages/actions/create')
const newpage = require('../packages/actions/newpage')
const gitpush = require('../packages/actions/gitpush')
const run = require('../packages/actions/run')
const npmMirror = require('../packages/actions/npm-mirror')
const server = require('../packages/actions/server')

if (!['init', 'new', 'push', 'run', 'server', 'origin'].includes(process.argv[2])) {
  printPkgVersion()
}


// version
program
  .version(getPkgVersion(), '-v, --version')
  .usage('[command]')

// 生成项目
program
  // .command('create <projectName>')
  .command('init')
  .description('Generate a project by type (taro 、backoffice...)')
  .action(create)

// 开启一个静态服务
program
  .command('server')
  .option('-p, --port', 'set my prot')
  .option('-s, --silent', `don't open browser`)
  .option('-d, --dir', `set run dir. current as default`)
  .option('-l, --log', `print url log`)
  .option('-f, --fallback', `Enable history fallback`)
  .description('run a server')
  .action(server)

// git push
program
  .command('push')
  .description('merge git pull && git commit -m  xxx && git push')
  .action(gitpush)

// 选择可运行的命令
program
  .command('run')
  .description('Lists all runnable commands')
  .action(run)

// 创建模块/页面
program
  .command('new <pagepath>')
  .description('create a module/page template.')
  .action(newpage)


// npm/yarn 镜像管理
program
  .command('origin <command>')
  .description('change npm/yarn mirror, sbc origin ls / sbc origin use')
  .action(npmMirror)


program.parse(process.argv)